use crate::errors::Error;
use pkcs11_sys::*;
use std::convert::TryFrom;
use std::ptr::null_mut;

pub enum Mechanism {
    RsaPkcsKeyPairGen,
    RsaPkcs,
    Rsa_9796,
    RsaX_509,
    Md2RsaPkcs,
    Md5RsaPkcs,
    Sha1RsaPkcs,
    Ripemd128RsaPkcs,
    Ripemd160RsaPkcs,
    RsaPkcsOaep,
    RsaX9_31KeyPairGen,
    RsaX9_31,
    Sha1RsaX9_31,
    RsaPkcsPss,
    Sha1RsaPkcsPss,
    DsaKeyPairGen,
    Dsa,
    DsaSha1,
    DsaSha224,
    DsaSha256,
    DsaSha384,
    DsaSha512,
    DhPkcsKeyPairGen,
    DhPkcsDerive,
    X9_42DhKeyPairGen,
    X9_42DhDerive,
    X9_42DhHybridDerive,
    X9_42MqvDerive,
    Sha256RsaPkcs,
    Sha384RsaPkcs,
    Sha512RsaPkcs,
    Sha256RsaPkcsPss,
    Sha384RsaPkcsPss,
    Sha512RsaPkcsPss,
    Sha512_224,
    Sha512_224Hmac,
    Sha512_224HmacGeneral,
    Sha512_224KeyDerivation,
    Sha512_256,
    Sha512_256Hmac,
    Sha512_256HmacGeneral,
    Sha512_256KeyDerivation,
    Sha512T,
    Sha512THmac,
    Sha512THmacGeneral,
    Sha512TKeyDerivation,
    Rc2KeyGen,
    Rc2Ecb,
    Rc2Cbc,
    Rc2Mac,
    Rc2MacGeneral,
    Rc2CbcPad,
    Rc4KeyGen,
    Rc4,
    DesKeyGen,
    DesEcb,
    DesCbc,
    DesMac,
    DesMacGeneral,
    DesCbcPad,
    Des2KeyGen,
    Des3KeyGen,
    Des3Ecb,
    Des3Cbc,
    Des3Mac,
    Des3MacGeneral,
    Des3CbcPad,
    Des3CmacGeneral,
    Des3Cmac,
    CdmfKeyGen,
    CdmfEcb,
    CdmfCbc,
    CdmfMac,
    CdmfMacGeneral,
    CdmfCbcPad,
    DesOfb64,
    DesOfb8,
    DesCfb64,
    DesCfb8,
    Md2,
    Md2Hmac,
    Md2HmacGeneral,
    Md5,
    Md5Hmac,
    Md5HmacGeneral,
    Sha_1,
    Sha_1Hmac,
    Sha_1HmacGeneral,
    Ripemd128,
    Ripemd128Hmac,
    Ripemd128HmacGeneral,
    Ripemd160,
    Ripemd160Hmac,
    Ripemd160HmacGeneral,
    Sha256,
    Sha256Hmac,
    Sha256HmacGeneral,
    Sha384,
    Sha384Hmac,
    Sha384HmacGeneral,
    Sha512,
    Sha512Hmac,
    Sha512HmacGeneral,
    SecuridKeyGen,
    Securid,
    HotpKeyGen,
    Hotp,
    Acti,
    ActiKeyGen,
    CastKeyGen,
    CastEcb,
    CastCbc,
    CastMac,
    CastMacGeneral,
    CastCbcPad,
    Cast3KeyGen,
    Cast3Ecb,
    Cast3Cbc,
    Cast3Mac,
    Cast3MacGeneral,
    Cast3CbcPad,
    Cast5KeyGen,
    Cast128KeyGen,
    Cast5Ecb,
    Cast128Ecb,
    Cast5Cbc,
    Cast128Cbc,
    Cast5Mac,
    Cast128Mac,
    Cast5MacGeneral,
    Cast128MacGeneral,
    Cast5CbcPad,
    Cast128CbcPad,
    Rc5KeyGen,
    Rc5Ecb,
    Rc5Cbc,
    Rc5Mac,
    Rc5MacGeneral,
    Rc5CbcPad,
    IdeaKeyGen,
    IdeaEcb,
    IdeaCbc,
    IdeaMac,
    IdeaMacGeneral,
    IdeaCbcPad,
    GenericSecretKeyGen,
    ConcatenateBaseAndKey,
    ConcatenateBaseAndData,
    ConcatenateDataAndBase,
    XorBaseAndData,
    ExtractKeyFromKey,
    Ssl3PreMasterKeyGen,
    Ssl3MasterKeyDerive,
    Ssl3KeyAndMacDerive,
    Ssl3MasterKeyDeriveDh,
    TlsPreMasterKeyGen,
    TlsMasterKeyDerive,
    TlsKeyAndMacDerive,
    TlsMasterKeyDeriveDh,
    TlsPrf,
    Ssl3Md5Mac,
    Ssl3Sha1Mac,
    Md5KeyDerivation,
    Md2KeyDerivation,
    Sha1KeyDerivation,
    Sha256KeyDerivation,
    Sha384KeyDerivation,
    Sha512KeyDerivation,
    PbeMd2DesCbc,
    PbeMd5DesCbc,
    PbeMd5CastCbc,
    PbeMd5Cast3Cbc,
    PbeMd5Cast5Cbc,
    PbeMd5Cast128Cbc,
    PbeSha1Cast5Cbc,
    PbeSha1Cast128Cbc,
    PbeSha1Rc4_128,
    PbeSha1Rc4_40,
    PbeSha1Des3EdeCbc,
    PbeSha1Des2EdeCbc,
    PbeSha1Rc2_128Cbc,
    PbeSha1Rc2_40Cbc,
    Pkcs5Pbkd2,
    PbaSha1WithSha1Hmac,
    WtlsPreMasterKeyGen,
    WtlsMasterKeyDerive,
    WtlsMasterKeyDeriveDhEcc,
    WtlsPrf,
    WtlsServerKeyAndMacDerive,
    WtlsClientKeyAndMacDerive,
    Tls10MacServer,
    Tls10MacClient,
    Tls12Mac,
    Tls12Kdf,
    Tls12MasterKeyDerive,
    Tls12KeyAndMacDerive,
    Tls12MasterKeyDeriveDh,
    Tls12KeySafeDerive,
    TlsMac,
    TlsKdf,
    KeyWrapLynks,
    KeyWrapSetOaep,
    CmsSig,
    KipDerive,
    KipWrap,
    KipMac,
    CamelliaKeyGen,
    CamelliaCtr,
    AriaKeyGen,
    AriaEcb,
    AriaCbc,
    AriaMac,
    AriaMacGeneral,
    AriaCbcPad,
    AriaEcbEncryptData,
    AriaCbcEncryptData,
    SeedKeyGen,
    SeedEcb,
    SeedCbc,
    SeedMac,
    SeedMacGeneral,
    SeedCbcPad,
    SeedEcbEncryptData,
    SeedCbcEncryptData,
    SkipjackKeyGen,
    SkipjackEcb64,
    SkipjackCbc64,
    SkipjackOfb64,
    SkipjackCfb64,
    SkipjackCfb32,
    SkipjackCfb16,
    SkipjackCfb8,
    SkipjackWrap,
    SkipjackPrivateWrap,
    SkipjackRelayx,
    KeaKeyPairGen,
    KeaKeyDerive,
    FortezzaTimestamp,
    BatonKeyGen,
    BatonEcb128,
    BatonEcb96,
    BatonCbc128,
    BatonCounter,
    BatonShuffle,
    BatonWrap,
    EcdsaKeyPairGen,
    EcKeyPairGen,
    Ecdsa,
    EcdsaSha1,
    EcdsaSha224,
    EcdsaSha256,
    EcdsaSha384,
    EcdsaSha512,
    Ecdh1Derive,
    Ecdh1CofactorDerive,
    EcmqvDerive,
    EcdhAesKeyWrap,
    RsaAesKeyWrap,
    JuniperKeyGen,
    JuniperEcb128,
    JuniperCbc128,
    JuniperCounter,
    JuniperShuffle,
    JuniperWrap,
    Fasthash,
    AesKeyGen,
    AesEcb,
    AesCbc,
    AesMac,
    AesMacGeneral,
    AesCbcPad,
    AesCtr,
    AesGcm,
    AesCcm,
    AesCts,
    AesCmac,
    AesCmacGeneral,
    AesXcbcMac,
    AesXcbcMac_96,
    AesGmac,
    BlowfishKeyGen,
    BlowfishCbc,
    TwofishKeyGen,
    TwofishCbc,
    BlowfishCbcPad,
    TwofishCbcPad,
    DesEcbEncryptData,
    DesCbcEncryptData,
    Des3EcbEncryptData,
    Des3CbcEncryptData,
    AesEcbEncryptData,
    AesCbcEncryptData,
    Gostr3410KeyPairGen,
    Gostr3410,
    Gostr3410WithGostr3411,
    Gostr3410KeyWrap,
    Gostr3410Derive,
    Gostr3411,
    Gostr3411Hmac,
    Gost28147KeyGen,
    Gost28147Ecb,
    Gost28147,
    Gost28147Mac,
    Gost28147KeyWrap,
    DsaParameterGen,
    DhPkcsParameterGen,
    X9_42DhParameterGen,
    DsaProbabilisticParameterGen,
    DsaShaweTaylorParameterGen,
    AesOfb,
    AesCfb64,
    AesCfb8,
    AesCfb128,
    AesCfb1,
    VendorDefined,
    Sha224,
    Sha224Hmac,
    Sha224HmacGeneral,
    Sha224RsaPkcs,
    Sha224RsaPkcsPss,
    Sha224KeyDerivation,
    CamelliaEcb,
    CamelliaCbc,
    CamelliaMac,
    CamelliaMacGeneral,
    CamelliaCbcPad,
    CamelliaEcbEncryptData,
    CamelliaCbcEncryptData,
    AesKeyWrap,
    AesKeyWrapPad,
    RsaPkcsTpm_1_1,
    RsaPkcsOaepTpm_1_1,
}

impl Mechanism {
    fn mechanism_type(&self) -> CK_MECHANISM_TYPE {
        match self {
            Mechanism::RsaPkcsKeyPairGen => CKM_RSA_PKCS_KEY_PAIR_GEN,
            Mechanism::RsaPkcs => CKM_RSA_PKCS,
            Mechanism::Rsa_9796 => CKM_RSA_9796,
            Mechanism::RsaX_509 => CKM_RSA_X_509,
            Mechanism::Md2RsaPkcs => CKM_MD2_RSA_PKCS,
            Mechanism::Md5RsaPkcs => CKM_MD5_RSA_PKCS,
            Mechanism::Sha1RsaPkcs => CKM_SHA1_RSA_PKCS,
            Mechanism::Ripemd128RsaPkcs => CKM_RIPEMD128_RSA_PKCS,
            Mechanism::Ripemd160RsaPkcs => CKM_RIPEMD160_RSA_PKCS,
            Mechanism::RsaPkcsOaep => CKM_RSA_PKCS_OAEP,
            Mechanism::RsaX9_31KeyPairGen => CKM_RSA_X9_31_KEY_PAIR_GEN,
            Mechanism::RsaX9_31 => CKM_RSA_X9_31,
            Mechanism::Sha1RsaX9_31 => CKM_SHA1_RSA_X9_31,
            Mechanism::RsaPkcsPss => CKM_RSA_PKCS_PSS,
            Mechanism::Sha1RsaPkcsPss => CKM_SHA1_RSA_PKCS_PSS,
            Mechanism::DsaKeyPairGen => CKM_DSA_KEY_PAIR_GEN,
            Mechanism::Dsa => CKM_DSA,
            Mechanism::DsaSha1 => CKM_DSA_SHA1,
            Mechanism::DsaSha224 => CKM_DSA_SHA224,
            Mechanism::DsaSha256 => CKM_DSA_SHA256,
            Mechanism::DsaSha384 => CKM_DSA_SHA384,
            Mechanism::DsaSha512 => CKM_DSA_SHA512,
            Mechanism::DhPkcsKeyPairGen => CKM_DH_PKCS_KEY_PAIR_GEN,
            Mechanism::DhPkcsDerive => CKM_DH_PKCS_DERIVE,
            Mechanism::X9_42DhKeyPairGen => CKM_X9_42_DH_KEY_PAIR_GEN,
            Mechanism::X9_42DhDerive => CKM_X9_42_DH_DERIVE,
            Mechanism::X9_42DhHybridDerive => CKM_X9_42_DH_HYBRID_DERIVE,
            Mechanism::X9_42MqvDerive => CKM_X9_42_MQV_DERIVE,
            Mechanism::Sha256RsaPkcs => CKM_SHA256_RSA_PKCS,
            Mechanism::Sha384RsaPkcs => CKM_SHA384_RSA_PKCS,
            Mechanism::Sha512RsaPkcs => CKM_SHA512_RSA_PKCS,
            Mechanism::Sha256RsaPkcsPss => CKM_SHA256_RSA_PKCS_PSS,
            Mechanism::Sha384RsaPkcsPss => CKM_SHA384_RSA_PKCS_PSS,
            Mechanism::Sha512RsaPkcsPss => CKM_SHA512_RSA_PKCS_PSS,
            Mechanism::Sha512_224 => CKM_SHA512_224,
            Mechanism::Sha512_224Hmac => CKM_SHA512_224_HMAC,
            Mechanism::Sha512_224HmacGeneral => CKM_SHA512_224_HMAC_GENERAL,
            Mechanism::Sha512_224KeyDerivation => CKM_SHA512_224_KEY_DERIVATION,
            Mechanism::Sha512_256 => CKM_SHA512_256,
            Mechanism::Sha512_256Hmac => CKM_SHA512_256_HMAC,
            Mechanism::Sha512_256HmacGeneral => CKM_SHA512_256_HMAC_GENERAL,
            Mechanism::Sha512_256KeyDerivation => CKM_SHA512_256_KEY_DERIVATION,
            Mechanism::Sha512T => CKM_SHA512_T,
            Mechanism::Sha512THmac => CKM_SHA512_T_HMAC,
            Mechanism::Sha512THmacGeneral => CKM_SHA512_T_HMAC_GENERAL,
            Mechanism::Sha512TKeyDerivation => CKM_SHA512_T_KEY_DERIVATION,
            Mechanism::Rc2KeyGen => CKM_RC2_KEY_GEN,
            Mechanism::Rc2Ecb => CKM_RC2_ECB,
            Mechanism::Rc2Cbc => CKM_RC2_CBC,
            Mechanism::Rc2Mac => CKM_RC2_MAC,
            Mechanism::Rc2MacGeneral => CKM_RC2_MAC_GENERAL,
            Mechanism::Rc2CbcPad => CKM_RC2_CBC_PAD,
            Mechanism::Rc4KeyGen => CKM_RC4_KEY_GEN,
            Mechanism::Rc4 => CKM_RC4,
            Mechanism::DesKeyGen => CKM_DES_KEY_GEN,
            Mechanism::DesEcb => CKM_DES_ECB,
            Mechanism::DesCbc => CKM_DES_CBC,
            Mechanism::DesMac => CKM_DES_MAC,
            Mechanism::DesMacGeneral => CKM_DES_MAC_GENERAL,
            Mechanism::DesCbcPad => CKM_DES_CBC_PAD,
            Mechanism::Des2KeyGen => CKM_DES2_KEY_GEN,
            Mechanism::Des3KeyGen => CKM_DES3_KEY_GEN,
            Mechanism::Des3Ecb => CKM_DES3_ECB,
            Mechanism::Des3Cbc => CKM_DES3_CBC,
            Mechanism::Des3Mac => CKM_DES3_MAC,
            Mechanism::Des3MacGeneral => CKM_DES3_MAC_GENERAL,
            Mechanism::Des3CbcPad => CKM_DES3_CBC_PAD,
            Mechanism::Des3CmacGeneral => CKM_DES3_CMAC_GENERAL,
            Mechanism::Des3Cmac => CKM_DES3_CMAC,
            Mechanism::CdmfKeyGen => CKM_CDMF_KEY_GEN,
            Mechanism::CdmfEcb => CKM_CDMF_ECB,
            Mechanism::CdmfCbc => CKM_CDMF_CBC,
            Mechanism::CdmfMac => CKM_CDMF_MAC,
            Mechanism::CdmfMacGeneral => CKM_CDMF_MAC_GENERAL,
            Mechanism::CdmfCbcPad => CKM_CDMF_CBC_PAD,
            Mechanism::DesOfb64 => CKM_DES_OFB64,
            Mechanism::DesOfb8 => CKM_DES_OFB8,
            Mechanism::DesCfb64 => CKM_DES_CFB64,
            Mechanism::DesCfb8 => CKM_DES_CFB8,
            Mechanism::Md2 => CKM_MD2,
            Mechanism::Md2Hmac => CKM_MD2_HMAC,
            Mechanism::Md2HmacGeneral => CKM_MD2_HMAC_GENERAL,
            Mechanism::Md5 => CKM_MD5,
            Mechanism::Md5Hmac => CKM_MD5_HMAC,
            Mechanism::Md5HmacGeneral => CKM_MD5_HMAC_GENERAL,
            Mechanism::Sha_1 => CKM_SHA_1,
            Mechanism::Sha_1Hmac => CKM_SHA_1_HMAC,
            Mechanism::Sha_1HmacGeneral => CKM_SHA_1_HMAC_GENERAL,
            Mechanism::Ripemd128 => CKM_RIPEMD128,
            Mechanism::Ripemd128Hmac => CKM_RIPEMD128_HMAC,
            Mechanism::Ripemd128HmacGeneral => CKM_RIPEMD128_HMAC_GENERAL,
            Mechanism::Ripemd160 => CKM_RIPEMD160,
            Mechanism::Ripemd160Hmac => CKM_RIPEMD160_HMAC,
            Mechanism::Ripemd160HmacGeneral => CKM_RIPEMD160_HMAC_GENERAL,
            Mechanism::Sha256 => CKM_SHA256,
            Mechanism::Sha256Hmac => CKM_SHA256_HMAC,
            Mechanism::Sha256HmacGeneral => CKM_SHA256_HMAC_GENERAL,
            Mechanism::Sha384 => CKM_SHA384,
            Mechanism::Sha384Hmac => CKM_SHA384_HMAC,
            Mechanism::Sha384HmacGeneral => CKM_SHA384_HMAC_GENERAL,
            Mechanism::Sha512 => CKM_SHA512,
            Mechanism::Sha512Hmac => CKM_SHA512_HMAC,
            Mechanism::Sha512HmacGeneral => CKM_SHA512_HMAC_GENERAL,
            Mechanism::SecuridKeyGen => CKM_SECURID_KEY_GEN,
            Mechanism::Securid => CKM_SECURID,
            Mechanism::HotpKeyGen => CKM_HOTP_KEY_GEN,
            Mechanism::Hotp => CKM_HOTP,
            Mechanism::Acti => CKM_ACTI,
            Mechanism::ActiKeyGen => CKM_ACTI_KEY_GEN,
            Mechanism::CastKeyGen => CKM_CAST_KEY_GEN,
            Mechanism::CastEcb => CKM_CAST_ECB,
            Mechanism::CastCbc => CKM_CAST_CBC,
            Mechanism::CastMac => CKM_CAST_MAC,
            Mechanism::CastMacGeneral => CKM_CAST_MAC_GENERAL,
            Mechanism::CastCbcPad => CKM_CAST_CBC_PAD,
            Mechanism::Cast3KeyGen => CKM_CAST3_KEY_GEN,
            Mechanism::Cast3Ecb => CKM_CAST3_ECB,
            Mechanism::Cast3Cbc => CKM_CAST3_CBC,
            Mechanism::Cast3Mac => CKM_CAST3_MAC,
            Mechanism::Cast3MacGeneral => CKM_CAST3_MAC_GENERAL,
            Mechanism::Cast3CbcPad => CKM_CAST3_CBC_PAD,
            Mechanism::Cast5KeyGen => CKM_CAST5_KEY_GEN,
            Mechanism::Cast128KeyGen => CKM_CAST128_KEY_GEN,
            Mechanism::Cast5Ecb => CKM_CAST5_ECB,
            Mechanism::Cast128Ecb => CKM_CAST128_ECB,
            Mechanism::Cast5Cbc => CKM_CAST5_CBC,
            Mechanism::Cast128Cbc => CKM_CAST128_CBC,
            Mechanism::Cast5Mac => CKM_CAST5_MAC,
            Mechanism::Cast128Mac => CKM_CAST128_MAC,
            Mechanism::Cast5MacGeneral => CKM_CAST5_MAC_GENERAL,
            Mechanism::Cast128MacGeneral => CKM_CAST128_MAC_GENERAL,
            Mechanism::Cast5CbcPad => CKM_CAST5_CBC_PAD,
            Mechanism::Cast128CbcPad => CKM_CAST128_CBC_PAD,
            Mechanism::Rc5KeyGen => CKM_RC5_KEY_GEN,
            Mechanism::Rc5Ecb => CKM_RC5_ECB,
            Mechanism::Rc5Cbc => CKM_RC5_CBC,
            Mechanism::Rc5Mac => CKM_RC5_MAC,
            Mechanism::Rc5MacGeneral => CKM_RC5_MAC_GENERAL,
            Mechanism::Rc5CbcPad => CKM_RC5_CBC_PAD,
            Mechanism::IdeaKeyGen => CKM_IDEA_KEY_GEN,
            Mechanism::IdeaEcb => CKM_IDEA_ECB,
            Mechanism::IdeaCbc => CKM_IDEA_CBC,
            Mechanism::IdeaMac => CKM_IDEA_MAC,
            Mechanism::IdeaMacGeneral => CKM_IDEA_MAC_GENERAL,
            Mechanism::IdeaCbcPad => CKM_IDEA_CBC_PAD,
            Mechanism::GenericSecretKeyGen => CKM_GENERIC_SECRET_KEY_GEN,
            Mechanism::ConcatenateBaseAndKey => CKM_CONCATENATE_BASE_AND_KEY,
            Mechanism::ConcatenateBaseAndData => CKM_CONCATENATE_BASE_AND_DATA,
            Mechanism::ConcatenateDataAndBase => CKM_CONCATENATE_DATA_AND_BASE,
            Mechanism::XorBaseAndData => CKM_XOR_BASE_AND_DATA,
            Mechanism::ExtractKeyFromKey => CKM_EXTRACT_KEY_FROM_KEY,
            Mechanism::Ssl3PreMasterKeyGen => CKM_SSL3_PRE_MASTER_KEY_GEN,
            Mechanism::Ssl3MasterKeyDerive => CKM_SSL3_MASTER_KEY_DERIVE,
            Mechanism::Ssl3KeyAndMacDerive => CKM_SSL3_KEY_AND_MAC_DERIVE,
            Mechanism::Ssl3MasterKeyDeriveDh => CKM_SSL3_MASTER_KEY_DERIVE_DH,
            Mechanism::TlsPreMasterKeyGen => CKM_TLS_PRE_MASTER_KEY_GEN,
            Mechanism::TlsMasterKeyDerive => CKM_TLS_MASTER_KEY_DERIVE,
            Mechanism::TlsKeyAndMacDerive => CKM_TLS_KEY_AND_MAC_DERIVE,
            Mechanism::TlsMasterKeyDeriveDh => CKM_TLS_MASTER_KEY_DERIVE_DH,
            Mechanism::TlsPrf => CKM_TLS_PRF,
            Mechanism::Ssl3Md5Mac => CKM_SSL3_MD5_MAC,
            Mechanism::Ssl3Sha1Mac => CKM_SSL3_SHA1_MAC,
            Mechanism::Md5KeyDerivation => CKM_MD5_KEY_DERIVATION,
            Mechanism::Md2KeyDerivation => CKM_MD2_KEY_DERIVATION,
            Mechanism::Sha1KeyDerivation => CKM_SHA1_KEY_DERIVATION,
            Mechanism::Sha256KeyDerivation => CKM_SHA256_KEY_DERIVATION,
            Mechanism::Sha384KeyDerivation => CKM_SHA384_KEY_DERIVATION,
            Mechanism::Sha512KeyDerivation => CKM_SHA512_KEY_DERIVATION,
            Mechanism::PbeMd2DesCbc => CKM_PBE_MD2_DES_CBC,
            Mechanism::PbeMd5DesCbc => CKM_PBE_MD5_DES_CBC,
            Mechanism::PbeMd5CastCbc => CKM_PBE_MD5_CAST_CBC,
            Mechanism::PbeMd5Cast3Cbc => CKM_PBE_MD5_CAST3_CBC,
            Mechanism::PbeMd5Cast5Cbc => CKM_PBE_MD5_CAST5_CBC,
            Mechanism::PbeMd5Cast128Cbc => CKM_PBE_MD5_CAST128_CBC,
            Mechanism::PbeSha1Cast5Cbc => CKM_PBE_SHA1_CAST5_CBC,
            Mechanism::PbeSha1Cast128Cbc => CKM_PBE_SHA1_CAST128_CBC,
            Mechanism::PbeSha1Rc4_128 => CKM_PBE_SHA1_RC4_128,
            Mechanism::PbeSha1Rc4_40 => CKM_PBE_SHA1_RC4_40,
            Mechanism::PbeSha1Des3EdeCbc => CKM_PBE_SHA1_DES3_EDE_CBC,
            Mechanism::PbeSha1Des2EdeCbc => CKM_PBE_SHA1_DES2_EDE_CBC,
            Mechanism::PbeSha1Rc2_128Cbc => CKM_PBE_SHA1_RC2_128_CBC,
            Mechanism::PbeSha1Rc2_40Cbc => CKM_PBE_SHA1_RC2_40_CBC,
            Mechanism::Pkcs5Pbkd2 => CKM_PKCS5_PBKD2,
            Mechanism::PbaSha1WithSha1Hmac => CKM_PBA_SHA1_WITH_SHA1_HMAC,
            Mechanism::WtlsPreMasterKeyGen => CKM_WTLS_PRE_MASTER_KEY_GEN,
            Mechanism::WtlsMasterKeyDerive => CKM_WTLS_MASTER_KEY_DERIVE,
            Mechanism::WtlsMasterKeyDeriveDhEcc => CKM_WTLS_MASTER_KEY_DERIVE_DH_ECC,
            Mechanism::WtlsPrf => CKM_WTLS_PRF,
            Mechanism::WtlsServerKeyAndMacDerive => CKM_WTLS_SERVER_KEY_AND_MAC_DERIVE,
            Mechanism::WtlsClientKeyAndMacDerive => CKM_WTLS_CLIENT_KEY_AND_MAC_DERIVE,
            Mechanism::Tls10MacServer => CKM_TLS10_MAC_SERVER,
            Mechanism::Tls10MacClient => CKM_TLS10_MAC_CLIENT,
            Mechanism::Tls12Mac => CKM_TLS12_MAC,
            Mechanism::Tls12Kdf => CKM_TLS12_KDF,
            Mechanism::Tls12MasterKeyDerive => CKM_TLS12_MASTER_KEY_DERIVE,
            Mechanism::Tls12KeyAndMacDerive => CKM_TLS12_KEY_AND_MAC_DERIVE,
            Mechanism::Tls12MasterKeyDeriveDh => CKM_TLS12_MASTER_KEY_DERIVE_DH,
            Mechanism::Tls12KeySafeDerive => CKM_TLS12_KEY_SAFE_DERIVE,
            Mechanism::TlsMac => CKM_TLS_MAC,
            Mechanism::TlsKdf => CKM_TLS_KDF,
            Mechanism::KeyWrapLynks => CKM_KEY_WRAP_LYNKS,
            Mechanism::KeyWrapSetOaep => CKM_KEY_WRAP_SET_OAEP,
            Mechanism::CmsSig => CKM_CMS_SIG,
            Mechanism::KipDerive => CKM_KIP_DERIVE,
            Mechanism::KipWrap => CKM_KIP_WRAP,
            Mechanism::KipMac => CKM_KIP_MAC,
            Mechanism::CamelliaKeyGen => CKM_CAMELLIA_KEY_GEN,
            Mechanism::CamelliaCtr => CKM_CAMELLIA_CTR,
            Mechanism::AriaKeyGen => CKM_ARIA_KEY_GEN,
            Mechanism::AriaEcb => CKM_ARIA_ECB,
            Mechanism::AriaCbc => CKM_ARIA_CBC,
            Mechanism::AriaMac => CKM_ARIA_MAC,
            Mechanism::AriaMacGeneral => CKM_ARIA_MAC_GENERAL,
            Mechanism::AriaCbcPad => CKM_ARIA_CBC_PAD,
            Mechanism::AriaEcbEncryptData => CKM_ARIA_ECB_ENCRYPT_DATA,
            Mechanism::AriaCbcEncryptData => CKM_ARIA_CBC_ENCRYPT_DATA,
            Mechanism::SeedKeyGen => CKM_SEED_KEY_GEN,
            Mechanism::SeedEcb => CKM_SEED_ECB,
            Mechanism::SeedCbc => CKM_SEED_CBC,
            Mechanism::SeedMac => CKM_SEED_MAC,
            Mechanism::SeedMacGeneral => CKM_SEED_MAC_GENERAL,
            Mechanism::SeedCbcPad => CKM_SEED_CBC_PAD,
            Mechanism::SeedEcbEncryptData => CKM_SEED_ECB_ENCRYPT_DATA,
            Mechanism::SeedCbcEncryptData => CKM_SEED_CBC_ENCRYPT_DATA,
            Mechanism::SkipjackKeyGen => CKM_SKIPJACK_KEY_GEN,
            Mechanism::SkipjackEcb64 => CKM_SKIPJACK_ECB64,
            Mechanism::SkipjackCbc64 => CKM_SKIPJACK_CBC64,
            Mechanism::SkipjackOfb64 => CKM_SKIPJACK_OFB64,
            Mechanism::SkipjackCfb64 => CKM_SKIPJACK_CFB64,
            Mechanism::SkipjackCfb32 => CKM_SKIPJACK_CFB32,
            Mechanism::SkipjackCfb16 => CKM_SKIPJACK_CFB16,
            Mechanism::SkipjackCfb8 => CKM_SKIPJACK_CFB8,
            Mechanism::SkipjackWrap => CKM_SKIPJACK_WRAP,
            Mechanism::SkipjackPrivateWrap => CKM_SKIPJACK_PRIVATE_WRAP,
            Mechanism::SkipjackRelayx => CKM_SKIPJACK_RELAYX,
            Mechanism::KeaKeyPairGen => CKM_KEA_KEY_PAIR_GEN,
            Mechanism::KeaKeyDerive => CKM_KEA_KEY_DERIVE,
            Mechanism::FortezzaTimestamp => CKM_FORTEZZA_TIMESTAMP,
            Mechanism::BatonKeyGen => CKM_BATON_KEY_GEN,
            Mechanism::BatonEcb128 => CKM_BATON_ECB128,
            Mechanism::BatonEcb96 => CKM_BATON_ECB96,
            Mechanism::BatonCbc128 => CKM_BATON_CBC128,
            Mechanism::BatonCounter => CKM_BATON_COUNTER,
            Mechanism::BatonShuffle => CKM_BATON_SHUFFLE,
            Mechanism::BatonWrap => CKM_BATON_WRAP,
            Mechanism::EcdsaKeyPairGen => CKM_ECDSA_KEY_PAIR_GEN,
            Mechanism::EcKeyPairGen => CKM_EC_KEY_PAIR_GEN,
            Mechanism::Ecdsa => CKM_ECDSA,
            Mechanism::EcdsaSha1 => CKM_ECDSA_SHA1,
            Mechanism::EcdsaSha224 => CKM_ECDSA_SHA224,
            Mechanism::EcdsaSha256 => CKM_ECDSA_SHA256,
            Mechanism::EcdsaSha384 => CKM_ECDSA_SHA384,
            Mechanism::EcdsaSha512 => CKM_ECDSA_SHA512,
            Mechanism::Ecdh1Derive => CKM_ECDH1_DERIVE,
            Mechanism::Ecdh1CofactorDerive => CKM_ECDH1_COFACTOR_DERIVE,
            Mechanism::EcmqvDerive => CKM_ECMQV_DERIVE,
            Mechanism::EcdhAesKeyWrap => CKM_ECDH_AES_KEY_WRAP,
            Mechanism::RsaAesKeyWrap => CKM_RSA_AES_KEY_WRAP,
            Mechanism::JuniperKeyGen => CKM_JUNIPER_KEY_GEN,
            Mechanism::JuniperEcb128 => CKM_JUNIPER_ECB128,
            Mechanism::JuniperCbc128 => CKM_JUNIPER_CBC128,
            Mechanism::JuniperCounter => CKM_JUNIPER_COUNTER,
            Mechanism::JuniperShuffle => CKM_JUNIPER_SHUFFLE,
            Mechanism::JuniperWrap => CKM_JUNIPER_WRAP,
            Mechanism::Fasthash => CKM_FASTHASH,
            Mechanism::AesKeyGen => CKM_AES_KEY_GEN,
            Mechanism::AesEcb => CKM_AES_ECB,
            Mechanism::AesCbc => CKM_AES_CBC,
            Mechanism::AesMac => CKM_AES_MAC,
            Mechanism::AesMacGeneral => CKM_AES_MAC_GENERAL,
            Mechanism::AesCbcPad => CKM_AES_CBC_PAD,
            Mechanism::AesCtr => CKM_AES_CTR,
            Mechanism::AesGcm => CKM_AES_GCM,
            Mechanism::AesCcm => CKM_AES_CCM,
            Mechanism::AesCts => CKM_AES_CTS,
            Mechanism::AesCmac => CKM_AES_CMAC,
            Mechanism::AesCmacGeneral => CKM_AES_CMAC_GENERAL,
            Mechanism::AesXcbcMac => CKM_AES_XCBC_MAC,
            Mechanism::AesXcbcMac_96 => CKM_AES_XCBC_MAC_96,
            Mechanism::AesGmac => CKM_AES_GMAC,
            Mechanism::BlowfishKeyGen => CKM_BLOWFISH_KEY_GEN,
            Mechanism::BlowfishCbc => CKM_BLOWFISH_CBC,
            Mechanism::TwofishKeyGen => CKM_TWOFISH_KEY_GEN,
            Mechanism::TwofishCbc => CKM_TWOFISH_CBC,
            Mechanism::BlowfishCbcPad => CKM_BLOWFISH_CBC_PAD,
            Mechanism::TwofishCbcPad => CKM_TWOFISH_CBC_PAD,
            Mechanism::DesEcbEncryptData => CKM_DES_ECB_ENCRYPT_DATA,
            Mechanism::DesCbcEncryptData => CKM_DES_CBC_ENCRYPT_DATA,
            Mechanism::Des3EcbEncryptData => CKM_DES3_ECB_ENCRYPT_DATA,
            Mechanism::Des3CbcEncryptData => CKM_DES3_CBC_ENCRYPT_DATA,
            Mechanism::AesEcbEncryptData => CKM_AES_ECB_ENCRYPT_DATA,
            Mechanism::AesCbcEncryptData => CKM_AES_CBC_ENCRYPT_DATA,
            Mechanism::Gostr3410KeyPairGen => CKM_GOSTR3410_KEY_PAIR_GEN,
            Mechanism::Gostr3410 => CKM_GOSTR3410,
            Mechanism::Gostr3410WithGostr3411 => CKM_GOSTR3410_WITH_GOSTR3411,
            Mechanism::Gostr3410KeyWrap => CKM_GOSTR3410_KEY_WRAP,
            Mechanism::Gostr3410Derive => CKM_GOSTR3410_DERIVE,
            Mechanism::Gostr3411 => CKM_GOSTR3411,
            Mechanism::Gostr3411Hmac => CKM_GOSTR3411_HMAC,
            Mechanism::Gost28147KeyGen => CKM_GOST28147_KEY_GEN,
            Mechanism::Gost28147Ecb => CKM_GOST28147_ECB,
            Mechanism::Gost28147 => CKM_GOST28147,
            Mechanism::Gost28147Mac => CKM_GOST28147_MAC,
            Mechanism::Gost28147KeyWrap => CKM_GOST28147_KEY_WRAP,
            Mechanism::DsaParameterGen => CKM_DSA_PARAMETER_GEN,
            Mechanism::DhPkcsParameterGen => CKM_DH_PKCS_PARAMETER_GEN,
            Mechanism::X9_42DhParameterGen => CKM_X9_42_DH_PARAMETER_GEN,
            Mechanism::DsaProbabilisticParameterGen => CKM_DSA_PROBABLISTIC_PARAMETER_GEN,
            Mechanism::DsaShaweTaylorParameterGen => CKM_DSA_SHAWE_TAYLOR_PARAMETER_GEN,
            Mechanism::AesOfb => CKM_AES_OFB,
            Mechanism::AesCfb64 => CKM_AES_CFB64,
            Mechanism::AesCfb8 => CKM_AES_CFB8,
            Mechanism::AesCfb128 => CKM_AES_CFB128,
            Mechanism::AesCfb1 => CKM_AES_CFB1,
            Mechanism::VendorDefined => CKM_VENDOR_DEFINED,
            Mechanism::Sha224 => CKM_SHA224,
            Mechanism::Sha224Hmac => CKM_SHA224_HMAC,
            Mechanism::Sha224HmacGeneral => CKM_SHA224_HMAC_GENERAL,
            Mechanism::Sha224RsaPkcs => CKM_SHA224_RSA_PKCS,
            Mechanism::Sha224RsaPkcsPss => CKM_SHA224_RSA_PKCS_PSS,
            Mechanism::Sha224KeyDerivation => CKM_SHA224_KEY_DERIVATION,
            Mechanism::CamelliaEcb => CKM_CAMELLIA_ECB,
            Mechanism::CamelliaCbc => CKM_CAMELLIA_CBC,
            Mechanism::CamelliaMac => CKM_CAMELLIA_MAC,
            Mechanism::CamelliaMacGeneral => CKM_CAMELLIA_MAC_GENERAL,
            Mechanism::CamelliaCbcPad => CKM_CAMELLIA_CBC_PAD,
            Mechanism::CamelliaEcbEncryptData => CKM_CAMELLIA_ECB_ENCRYPT_DATA,
            Mechanism::CamelliaCbcEncryptData => CKM_CAMELLIA_CBC_ENCRYPT_DATA,
            Mechanism::AesKeyWrap => CKM_AES_KEY_WRAP,
            Mechanism::AesKeyWrapPad => CKM_AES_KEY_WRAP_PAD,
            Mechanism::RsaPkcsTpm_1_1 => CKM_RSA_PKCS_TPM_1_1,
            Mechanism::RsaPkcsOaepTpm_1_1 => CKM_RSA_PKCS_OAEP_TPM_1_1,
        }
    }
}

impl TryFrom<Mechanism> for CK_MECHANISM {
    type Error = Error;
    fn try_from(mech: Mechanism) -> Result<Self, Error> {
        let mechanism = mech.mechanism_type();
        Ok(match mech {
            Mechanism::RsaPkcsKeyPairGen => CK_MECHANISM {
                mechanism,
                pParameter: null_mut(),
                ulParameterLen: 0,
            },
            Mechanism::RsaPkcs
            | Mechanism::Sha_1
            | Mechanism::Sha256
            | Mechanism::Sha384
            | Mechanism::Sha512 => CK_MECHANISM {
                mechanism,
                pParameter: null_mut(),
                ulParameterLen: 0,
            },
            _ => return Err(Error::NotSupported),
        })
    }
}
